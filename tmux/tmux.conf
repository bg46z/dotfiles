# Binding to reload config file, useful for tweaking tmux
bind R source ~/.tmux.conf \; display-message "Conf reloaded..."
set -g utf8 on
set -g default-terminal "xterm-256color"
set-option -ga terminal-override ',rxvt-uni*:XT:Ms=\E]52;%p1%s;%p2%s\007'
unbind C-b
set -g prefix C-a
set-option -g destroy-unattached off
set -g base-index 1
setw -g pane-base-index 1
set -s escape-time 0
set -g visual-activity off
setw -g monitor-activity on
set -g xterm-keys on
set -g history-limit 100000
set -g mouse-select-window on
set -g mouse-select-pane on
set-window-option -g mode-mouse on
setw -g automatic-rename on
set -g set-titles on
set -g renumber-windows on
setw -g aggressive-resize on
bind a send-prefix
bind C-Q kill-session

# Shortcut for window switching
bind C-a last-window
bind -n C-p previous-window
bind -n C-n next-window

# Shortcut for session related actions
unbind c
bind c command-prompt "new-session -A -s '%1'"
bind r command-prompt "rename-session %1"

# Shortcut for new window using PWD of focused window
unbind n
bind n new-window -c "#{pane_current_path}"
setw -g mode-keys vi

# Clipboard integration stuff (Linux only ATM)
bind -t vi-copy v begin-selection
bind -t vi-copy V rectangle-toggle
bind -t vi-copy y copy-pipe "xclip -selection clipboard -in"
unbind p
bind p run "tmux set-buffer \"$(xclip -selection clipboard -out)\" ; tmux paste-buffer"

# Shortcuts for pane management
bind v split-window -h -c "#{pane_current_path}"
bind V split-window -v -c "#{pane_current_path}"

bind -r J resize-pane -D 7
bind -r K resize-pane -U 7
bind -r H resize-pane -L 7
bind -r L resize-pane -R 7

bind -r h select-pane -L
bind -r j select-pane -D
bind -r k select-pane -U
bind -r l select-pane -R

# Smart pane switching with awareness of vim splits ala http://robots.thoughtbot.com/seamlessly-navigate-vim-and-tmux-splits
# original concept from Mislav Marohnić, https://gist.github.com/mislav/5189704
bind -n C-h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind -n C-j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind -n C-k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind -n C-l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind -n C-\ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

# Predefined sessions
new-session -s system

# Status bar settings adapted from powerline
set -g status on
set -g status-utf8 on
set -g status-interval 5
set -g status-justify left
set -g status-fg colour231
set -g status-bg colour234
set -g status-left-length 20
set -g status-left '#{?client_prefix,#[fg=colour254]#[bg=colour31]#[bold],#[fg=colour16]#[bg=colour254]#[bold]} #S #{?client_prefix,#[fg=colour31]#[bg=colour234]#[nobold],#[fg=colour254]#[bg=colour234]#[nobold]}'
set -g status-right "#[fg=colour233,bg=default,nobold,noitalics,nounderscore]#[fg=colour247,bg=colour233,nobold,noitalics,nounderscore] %a, %b %d #[fg=colour247,bg=colour252,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour247,nobold,noitalics,nounderscore] %I:%M %p #[fg=colour252,bg=colour247,nobold,noitalics,nounderscore]#[fg=colour16,bg=colour252,bold,noitalics,nounderscore] #h "
#'#(eval cut -c3- ~/.tmux.conf | sh -s status_right)'
set -g status-right-length 150
set -g window-status-format "#[fg=colour244,bg=colour234] #I #[fg=colour240] #[bg=colour234] #W "
set -g window-status-current-format "#[fg=colour234,bg=colour31]#[fg=colour117,bg=colour31] #I #[fg=colour231,bold] #W #[fg=colour31,bg=colour234,nobold]"
set -g window-status-last-style default
set-window-option -g window-status-fg colour247
set-window-option -g window-status-activity-attr none
set-window-option -g window-status-bell-attr none
set-window-option -g window-status-activity-fg yellow
set-window-option -g window-status-bell-fg red
